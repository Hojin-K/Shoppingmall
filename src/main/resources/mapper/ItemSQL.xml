<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.myapp.repository.ItemRepository">

    <resultMap id="item" type="com.shop.myapp.dto.Item">
        <id property="itemCode" column="item_code"/>
        <id property="itemPrice" column="item_price"/>
        <id property="itemName" column="item_name"/>
        <id property="memberId" column="member_id"/>
        <id property="itemImage" column="item_image"/>
        <id property="itemInfo" column="item_info"/>
        <id property="itemBrand" column="item_brand"/>
        <association property="country" javaType="com.shop.myapp.dto.Country">
            <result property="countryCode" column="country_code"/>
            <result property="countryName" column="country_name"/>
        </association>
        <collection property="itemOptions" ofType="com.shop.myapp.dto.ItemOption" javaType="java.util.List">
            <result property="optionCode" column="option_code"/>
            <result property="itemCode" column="item_code"/>
            <result property="optionName" column="option_name"/>
            <result property="optionStock" column="option_stock"/>
            <result property="optionPriceUd" column="option_price_ud"/>
        </collection>
    </resultMap>


    <insert id="insertItem" parameterType="com.shop.myapp.dto.Item">
        <selectKey resultType="java.lang.String" keyProperty="itemCode" order="BEFORE">
            SELECT CODE_ITEM_SQ.nextval FROM DUAL
        </selectKey>
        insert into HR.SHOP_ITEM_TB(item_code,
        member_id,
        country_code,
        item_name,
        item_price,
        item_image,
        item_info,
        ITEM_BRAND)
        values (#{itemCode},
        #{memberId},
        #{countryCode},
        #{itemName},
        #{itemPrice},
        #{itemImage},
        #{itemInfo},
        #{itemBrand})
    </insert>
    <update id="updateItem" parameterType="com.shop.myapp.dto.Item">
        update HR.SHOP_ITEM_TB
        set HR.SHOP_ITEM_TB.ITEM_PRICE = ${itemPrice},
        <if test="itemImage != null">
            HR.SHOP_ITEM_TB.ITEM_IMAGE = ${itemImage},
        </if>
        HR.SHOP_ITEM_TB.ITEM_INFO = ${itemInfo}
        where HR.SHOP_ITEM_TB.ITEM_CODE = ${itemCode}
    </update>
    <delete id="deleteItem" parameterType="string">
        delete HR.SHOP_ITEM_TB
        where HR.SHOP_ITEM_TB.ITEM_CODE = #{itemCode}
    </delete>

    <select id="findAll" resultMap="item"><![CDATA[
        SELECT *
        FROM (
                 SELECT ROW_NUMBER() over (order by item.item_code desc ) AS num,
                        item.ITEM_CODE,
                        MEMBER_ID,
                        item.COUNTRY_CODE                                 as country_code,
                        ITEM_NAME,
                        ITEM_PRICE,
                        ITEM_IMAGE,
                        ITEM_INFO,
                        COUNTRY_NAME,
                        sum(item_option.OPTION_STOCK)                     as item_stock
                 from HR.SHOP_ITEM_TB item,
                      HR.SHOP_ITEM_OPTIONS_TB item_option,
                      HR.SHOP_COUNTRY_TB country
                 WHERE rownum <= #{endList}
                   and item.ITEM_CODE = item_option.ITEM_CODE
                   and item.country_code = country.country_code
                 group by item.ITEM_CODE, MEMBER_ID, item.COUNTRY_CODE, ITEM_NAME, ITEM_PRICE, ITEM_IMAGE, ITEM_INFO,
                          ITEM_STOCK, country_name)
        WHERE #{startList} < num
        ]]></select>

    <select id="findByItemCode" resultMap="item">
        select *
        from HR.SHOP_ITEM_TB I,
             HR.SHOP_ITEM_OPTIONS_TB O,
             HR.SHOP_COUNTRY_TB C
        where I.ITEM_CODE = #{itemCode}
          and O.ITEM_CODE = #{itemCode}
          and C.country_code = I.country_code
    </select>
    <select id="getItemListCnt" resultType="java.lang.Integer">
        select count(*) as listCnt
        from HR.SHOP_ITEM_TB
    </select>
    <select id="findAllBySearch" resultType="com.shop.myapp.dto.Item">
        <![CDATA[
        SELECT *
        FROM (
                 select *
                 from (
                          SELECT ROW_NUMBER() over (order by item.item_code desc ) AS num,
                                 item.ITEM_CODE,
                                 MEMBER_ID,
                                 item.COUNTRY_CODE                                 as country_code,
                                 ITEM_NAME,
                                 ITEM_PRICE,
                                 ITEM_IMAGE,
                                 ITEM_INFO,
                                 COUNTRY_NAME,
                                 ITEM_BRAND,
                                 sum(item_option.OPTION_STOCK)                     as item_stock
                          from HR.SHOP_ITEM_TB item,
                               HR.SHOP_ITEM_OPTIONS_TB item_option,
                               HR.SHOP_COUNTRY_TB country
                          WHERE ITEM_NAME like '%' || #{search} || '%'
                             or item_brand like '%' || #{search} || '%'
                              and item.ITEM_CODE = item_option.ITEM_CODE
                              and item.country_code = country.country_code
                          group by item.ITEM_CODE, MEMBER_ID, item.COUNTRY_CODE, ITEM_NAME, ITEM_PRICE, ITEM_IMAGE,
                                   ITEM_INFO,
                                   ITEM_STOCK, country_name, item_brand
                      )
                 where rownum <= #{pagination.endList})
        WHERE #{pagination.startList} < num
        ]]>
    </select>

</mapper>